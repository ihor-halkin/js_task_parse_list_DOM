{"version":3,"sources":["scripts/main.js"],"names":["listOfEmployees","document","querySelectorAll","toNumber","string","slice","split","join","sortList","list","sortedList","sort","employee1","employee2","emp1","dataset","salary","emp2","employeeList","querySelector","forEach","employee","appendChild","getEmployees","array","map","name","innerText","position","age"],"mappings":";AAAA,aAyCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvCA,IAAMA,EAAkBC,SAASC,iBAAiB,SAElD,SAASC,EAASC,GACTA,OAAsC,EAAtCA,EAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAGzC,SAASC,EAASC,GACVC,IAAAA,EAAa,EAAID,GAAME,KAAK,SAACC,EAAWC,GACtCC,IAAAA,EAAOX,EAASS,EAAUG,QAAQC,QAGjCC,OAFMd,EAASU,EAAUE,QAAQC,QAE1BF,IAGVI,EAAejB,SAASkB,cAAc,MAE5CT,EAAWU,QAAQ,SAACC,GAClBH,EAAaI,YAAYD,KAI7B,SAASE,EAAaC,GACbA,OAAAA,EAAMC,IAAI,SAACJ,GAMT,MAAA,CACLK,KANmBL,EAASM,UAO5BC,SANeP,EAASN,QAAQa,SAOhCZ,OANaK,EAASN,QAAQC,OAO9Ba,IANUR,EAASN,QAAQc,OAWjCrB,EAASR,GAETuB,EAAiBvB,EAAAA","file":"main.e163af95.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listOfEmployees = document.querySelectorAll('ul li');\n\nfunction toNumber(string) {\n  return string.slice(1).split(',').join('') * 1;\n}\n\nfunction sortList(list) {\n  const sortedList = [...list].sort((employee1, employee2) => {\n    const emp1 = toNumber(employee1.dataset.salary);\n    const emp2 = toNumber(employee2.dataset.salary);\n\n    return emp2 - emp1;\n  });\n\n  const employeeList = document.querySelector('ul');\n\n  sortedList.forEach((employee) => {\n    employeeList.appendChild(employee);\n  });\n};\n\nfunction getEmployees(array) {\n  return array.map((employee) => {\n    const employeeName = employee.innerText;\n    const position = employee.dataset.position;\n    const salary = employee.dataset.salary;\n    const age = employee.dataset.age;\n\n    return {\n      name: employeeName,\n      position,\n      salary,\n      age,\n    };\n  });\n};\n\nsortList(listOfEmployees);\n\ngetEmployees([...listOfEmployees]);\n"]}